{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emilc\\\\Desktop\\\\Projects\\\\portfolio_projects\\\\FarmerErmilsWebshop\\\\src\\\\components\\\\Profile\\\\LogIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, useFormik } from 'formik';\nimport LoginButton from './LoginButton';\nimport LoginTextfield from './LoginTextfield';\nimport { loginUser } from '../../store/Auth.actions';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogIn = () => {\n  _s();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    error\n  } = useSelector(state => state.auth);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleLogin = async credentials => {\n    try {\n      setIsLoading(true);\n      await dispatch(loginUser(credentials));\n      setIsLoading(false);\n      history.push('/');\n    } catch (err) {\n      setIsLoading(false);\n    }\n  };\n  const credentialValidator = Yup.object().shape({\n    email: Yup.string().email(\"Invalid email address!\").required(\"e-mail address is required <3\"),\n    password: Yup.string().required(\"Password is required\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LogIn\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LogIn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formWrapper\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validationSchema: credentialValidator,\n        validateOnBlur: true,\n        onSubmit: async values => {\n          const {\n            email,\n            password\n          } = values;\n          await handleLogin({\n            username: email,\n            password\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"loginForm\",\n          children: [/*#__PURE__*/_jsxDEV(LoginTextfield, {\n            label: \"e-mail\",\n            name: \"email\",\n            id: \"emailInput\",\n            error: !!error,\n            helperText: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LoginTextfield, {\n            label: \"Password\",\n            name: \"password\",\n            id: \"passwordInput\",\n            error: !!error,\n            helperText: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errormsg\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n            variant: \"contained\",\n            type: \"submit\",\n            isLoading: isLoading,\n            children: \"Login!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(LogIn, \"hrWXvwSj9Ho9xrQCanaBvcGWZQc=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n_c = LogIn;\nexport default LogIn;\nvar _c;\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["React","useState","useHistory","useDispatch","useSelector","Formik","useFormik","LoginButton","LoginTextfield","loginUser","Yup","jsxDEV","_jsxDEV","LogIn","_s","history","dispatch","error","state","auth","isLoading","setIsLoading","handleLogin","credentials","push","err","credentialValidator","object","shape","email","string","required","password","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","validationSchema","validateOnBlur","onSubmit","values","username","Form","label","name","id","helperText","variant","type","_c","$RefreshReg$"],"sources":["C:/Users/emilc/Desktop/Projects/portfolio_projects/FarmerErmilsWebshop/src/components/Profile/LogIn.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector }  from 'react-redux';\r\nimport { Formik, useFormik } from 'formik';\r\nimport LoginButton from './LoginButton';\r\nimport LoginTextfield from './LoginTextfield';\r\n\r\nimport { loginUser } from '../../store/Auth.actions';\r\nimport * as Yup from 'yup';\r\n\r\nconst LogIn = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { error } = useSelector(state => state.auth);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleLogin = async (credentials) => {\r\n        try {\r\n            setIsLoading(true);\r\n            await dispatch(loginUser(credentials));\r\n            setIsLoading(false);\r\n            history.push('/');\r\n        } catch(err) {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    const credentialValidator = Yup.object().shape({\r\n        email: Yup.string()\r\n            .email(\"Invalid email address!\")\r\n            .required(\"e-mail address is required <3\"),\r\n        password: Yup.string()\r\n            .required(\"Password is required\")\r\n    })\r\n\r\n    return (\r\n        <div className='LogIn'>\r\n            <h2>LogIn</h2>\r\n            <div className=\"formWrapper\">\r\n                <Formik\r\n                    initialValues={{email: '', password: ''}}\r\n                    validationSchema={credentialValidator}\r\n                    validateOnBlur\r\n                    onSubmit={async (values) => {\r\n                        const { email, password } = values;\r\n                        await handleLogin({username: email, password});\r\n                    }}\r\n                >\r\n                    <Form className=\"loginForm\">\r\n                        <LoginTextfield\r\n                        label=\"e-mail\"\r\n                        name=\"email\"\r\n                        id=\"emailInput\" \r\n                        error={!!error}\r\n                        helperText={error} />\r\n                        <LoginTextfield\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        id=\"passwordInput\" \r\n                        error={!!error}\r\n                        helperText={error} />\r\n                        { error && <div className=\"errormsg\">{error}</div> }\r\n                        <LoginButton variant=\"contained\" type=\"submit\"\r\n                            isLoading={isLoading}>Login!</LoginButton>\r\n                    </Form>\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogIn;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}