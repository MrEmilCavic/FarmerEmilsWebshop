{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { checkOutCart } from './Cart.actions';\nimport { loadOneOrder, loadOrders } from './Orders.actions';\nconst orderSlice = createSlice({\n  name: orders,\n  initialState: {},\n  reducers: {},\n  extrareducers: builder => {\n    builder.addCase(checkOutCart.fulfilled, (state, action) => {\n      const {\n        order\n      } = action.payload;\n      state[order.id] = order;\n    }).addCase(loadOneOrder.fulfilled, (state, action) => {\n      const {\n        order\n      } = action.payload;\n      state[order.id] = order;\n    }).addCase(loadOrders.fulfilled, (state, action) => {\n      const {\n        orders\n      } = action.payload;\n      orders.forEach(order => {\n        const {\n          id\n        } = order;\n        state[id] = order;\n      });\n    });\n  }\n});\nexport default orderSlice.reducer;","map":{"version":3,"names":["createSlice","checkOutCart","loadOneOrder","loadOrders","orderSlice","name","orders","initialState","reducers","extrareducers","builder","addCase","fulfilled","state","action","order","payload","id","forEach","reducer"],"sources":["C:/Users/emilc/Desktop/Projects/portfolio_projects/FarmerErmilsWebshop/src/store/Orders.reducers.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { checkOutCart } from './Cart.actions';\r\nimport { loadOneOrder, loadOrders } from './Orders.actions';\r\nconst orderSlice = createSlice({\r\n    name: orders,\r\n    initialState: {},\r\n    reducers: {},\r\n    extrareducers: builder => {\r\n        builder\r\n            .addCase(checkOutCart.fulfilled, (state, action) => {\r\n                const { order } = action.payload;\r\n                state[order.id] = order;\r\n            })\r\n            .addCase(loadOneOrder.fulfilled, (state, action) => {\r\n                const { order } = action.payload;\r\n                state[order.id] = order;\r\n            })\r\n            .addCase(loadOrders.fulfilled, (state,action) => {\r\n                const { orders } = action.payload;\r\n                orders.forEach(order => {\r\n                    const { id } = order;\r\n                    state[id] = order;\r\n                });\r\n            })\r\n    }\r\n});\r\n\r\nexport default orderSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,YAAY,EAAEC,UAAU,QAAQ,kBAAkB;AAC3D,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EAC3BK,IAAI,EAAEC,MAAM;EACZC,YAAY,EAAE,CAAC,CAAC;EAChBC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAEC,OAAO,IAAI;IACtBA,OAAO,CACFC,OAAO,CAACV,YAAY,CAACW,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChD,MAAM;QAAEC;MAAM,CAAC,GAAGD,MAAM,CAACE,OAAO;MAChCH,KAAK,CAACE,KAAK,CAACE,EAAE,CAAC,GAAGF,KAAK;IAC3B,CAAC,CAAC,CACDJ,OAAO,CAACT,YAAY,CAACU,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChD,MAAM;QAAEC;MAAM,CAAC,GAAGD,MAAM,CAACE,OAAO;MAChCH,KAAK,CAACE,KAAK,CAACE,EAAE,CAAC,GAAGF,KAAK;IAC3B,CAAC,CAAC,CACDJ,OAAO,CAACR,UAAU,CAACS,SAAS,EAAE,CAACC,KAAK,EAACC,MAAM,KAAK;MAC7C,MAAM;QAAER;MAAO,CAAC,GAAGQ,MAAM,CAACE,OAAO;MACjCV,MAAM,CAACY,OAAO,CAACH,KAAK,IAAI;QACpB,MAAM;UAAEE;QAAG,CAAC,GAAGF,KAAK;QACpBF,KAAK,CAACI,EAAE,CAAC,GAAGF,KAAK;MACrB,CAAC,CAAC;IACN,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeX,UAAU,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}