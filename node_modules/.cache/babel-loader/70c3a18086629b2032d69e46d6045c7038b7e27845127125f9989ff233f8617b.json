{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { checkLogin } from './Auth.actions';\nimport { addCartItem, checkOutCart, loadCart, removeCartItem } from './Cart.actions';\n/*\r\nconst initialState = {\r\n    items: []\r\n};\r\n*/\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {},\n  reducers: {\n    addToCart: (state, action) => {\n      const item = action.payload;\n      console.log(`action.payload is `, action.payload);\n      console.log(`state.cart is `, state.cart);\n      console.log(`addtocart item is `, item);\n      if (item) {\n        state.cart = state.cart ? state.cart : state.cart.push(action.payload);\n        const isCartItem = state.cart.find(cartItem => cartItem.id === item.id);\n        if (isCartItem) {\n          state.cart.quantity += action.payload.quantity;\n        }\n        if (!isCartItem) {\n          state.cart.push(action.payload);\n          console.log(`state.cartis after push `, state.cart);\n        }\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(addCartItem.fulfilled, (state, action) => {\n      const {\n        item\n      } = action.payload;\n      state.items.push(item);\n    }).addCase(checkLogin.fulfilled, (state, action) => {\n      const {\n        cart\n      } = action.payload;\n      Object.assign(state, cart);\n    }).addCase(checkOutCart.fulfilled, (state, action) => {}).addCase(loadCart.fulfilled, (state, action) => {\n      const {\n        cart\n      } = action.payload;\n      Object.assign(state, cart);\n    }).addCase(removeCartItem.fulfilled, (state, action) => {\n      const {\n        item\n      } = action.payload;\n      state.items = state.items.filter(cartItem => cartItem.id !== item.id);\n    });\n  }\n});\nexport default cartSlice.reducer;\nexport const {\n  addToCart\n} = cartSlice.actions;","map":{"version":3,"names":["createSlice","checkLogin","addCartItem","checkOutCart","loadCart","removeCartItem","cartSlice","name","initialState","reducers","addToCart","state","action","item","payload","console","log","cart","push","isCartItem","find","cartItem","id","quantity","extraReducers","builder","addCase","fulfilled","items","Object","assign","filter","reducer","actions"],"sources":["C:/Users/emilc/Desktop/Projects/portfolio_projects/FarmerErmilsWebshop/src/store/Cart.reducers.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { checkLogin } from './Auth.actions';\r\nimport { addCartItem, checkOutCart, loadCart, removeCartItem } from './Cart.actions';\r\n/*\r\nconst initialState = {\r\n    items: []\r\n};\r\n*/\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {},\r\n    reducers: {\r\n        addToCart: (state, action) => {\r\n            const item = action.payload;\r\n            console.log(`action.payload is `, action.payload);\r\n            console.log(`state.cart is `, state.cart);\r\n            console.log(`addtocart item is `, item);\r\n            if(item){\r\n                state.cart = state.cart ? state.cart : state.cart.push(action.payload);\r\n                const isCartItem = state.cart.find((cartItem) => cartItem.id === item.id);\r\n                if(isCartItem) {\r\n                    state.cart.quantity += action.payload.quantity;\r\n                }\r\n                if(!isCartItem) {\r\n                    state.cart.push(action.payload);\r\n                    console.log(`state.cartis after push `, state.cart);\r\n                } \r\n            }          \r\n        }\r\n\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(addCartItem.fulfilled, (state, action) => {\r\n                const { item } = action.payload;\r\n                state.items.push(item);\r\n            })\r\n            .addCase(checkLogin.fulfilled, (state, action) => {\r\n                const { cart } = action.payload;\r\n                Object.assign(state, cart);\r\n            })\r\n            .addCase(checkOutCart.fulfilled, (state, action) => {\r\n            })\r\n            .addCase(loadCart.fulfilled, (state, action) => {\r\n                const { cart } = action.payload;\r\n                Object.assign(state, cart);\r\n            })\r\n            .addCase(removeCartItem.fulfilled, (state, action) => {\r\n                const { item } = action.payload;\r\n                state.items = state.items.filter((cartItem) => cartItem.id !== item.id);\r\n            })\r\n    }\r\n});\r\n\r\n\r\nexport default cartSlice.reducer;\r\nexport const { addToCart } = cartSlice.actions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}