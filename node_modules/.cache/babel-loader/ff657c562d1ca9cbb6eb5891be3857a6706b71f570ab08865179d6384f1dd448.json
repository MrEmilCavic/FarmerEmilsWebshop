{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { isLoggedIn, login, register } from '../apis/auth';\nexport const checkLogin = createAsyncThunk('auth/checkLogin', async (param, thunkAPI) => {\n  try {\n    const response = await isLoggedIn();\n    return {\n      cart: response.cart,\n      isAuthenticated: true,\n      user: response.user\n    };\n  } catch (err) {\n    throw err;\n  }\n});\nexport const loginUser = createAsyncThunk('auth/loginUser', async (credentials, thunkAPI) => {\n  try {\n    const response = await login(credentials);\n    return {\n      user: response,\n      isAuthenticated: true\n    };\n  } catch (err) {\n    throw err;\n  }\n});\nexport const registerUser = createAsyncThunk('auth/registerUser', async (crednetials, thunkAPI) => {\n  try {\n    await register(credentials);\n    return {};\n  } catch (err) {\n    throw err;\n  }\n});","map":{"version":3,"names":["createAsyncThunk","isLoggedIn","login","register","checkLogin","param","thunkAPI","response","cart","isAuthenticated","user","err","loginUser","credentials","registerUser","crednetials"],"sources":["C:/Users/emilc/Desktop/Projects/portfolio_projects/FarmerErmilsWebshop/src/store/Auth.actions.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { isLoggedIn, login, register } from '../apis/auth';\r\n\r\nexport const checkLogin = createAsyncThunk(\r\n    'auth/checkLogin',\r\n    async (param, thunkAPI) => {\r\n        try {\r\n            const response = await isLoggedIn();\r\n            return {\r\n                cart: response.cart,\r\n                isAuthenticated: true,\r\n                user: response.user\r\n            }\r\n        } catch(err) {\r\n            throw err;\r\n        }\r\n    }\r\n);\r\n\r\nexport const loginUser = createAsyncThunk(\r\n    'auth/loginUser',\r\n    async (credentials, thunkAPI) => {\r\n        try {\r\n            const response = await login(credentials);\r\n            return {\r\n                user: response,\r\n                isAuthenticated: true\r\n            }\r\n        } catch(err) {\r\n            throw err;\r\n        }\r\n    }\r\n);\r\n\r\nexport const registerUser = createAsyncThunk(\r\n    'auth/registerUser',\r\n    async (crednetials, thunkAPI) => {\r\n        try {\r\n            await register(credentials);\r\n            return {};\r\n        } catch(err) {\r\n            throw err;\r\n        }\r\n    }\r\n);"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,UAAU,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,cAAc;AAE1D,OAAO,MAAMC,UAAU,GAAGJ,gBAAgB,CACtC,iBAAiB,EACjB,OAAOK,KAAK,EAAEC,QAAQ,KAAK;EACvB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMN,UAAU,CAAC,CAAC;IACnC,OAAO;MACHO,IAAI,EAAED,QAAQ,CAACC,IAAI;MACnBC,eAAe,EAAE,IAAI;MACrBC,IAAI,EAAEH,QAAQ,CAACG;IACnB,CAAC;EACL,CAAC,CAAC,OAAMC,GAAG,EAAE;IACT,MAAMA,GAAG;EACb;AACJ,CACJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGZ,gBAAgB,CACrC,gBAAgB,EAChB,OAAOa,WAAW,EAAEP,QAAQ,KAAK;EAC7B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACW,WAAW,CAAC;IACzC,OAAO;MACHH,IAAI,EAAEH,QAAQ;MACdE,eAAe,EAAE;IACrB,CAAC;EACL,CAAC,CAAC,OAAME,GAAG,EAAE;IACT,MAAMA,GAAG;EACb;AACJ,CACJ,CAAC;AAED,OAAO,MAAMG,YAAY,GAAGd,gBAAgB,CACxC,mBAAmB,EACnB,OAAOe,WAAW,EAAET,QAAQ,KAAK;EAC7B,IAAI;IACA,MAAMH,QAAQ,CAACU,WAAW,CAAC;IAC3B,OAAO,CAAC,CAAC;EACb,CAAC,CAAC,OAAMF,GAAG,EAAE;IACT,MAAMA,GAAG;EACb;AACJ,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}