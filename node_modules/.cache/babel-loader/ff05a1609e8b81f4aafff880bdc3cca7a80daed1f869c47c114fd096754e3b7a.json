{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { loadItemGroups, loadOneItemGroup } from './ItemGroups.actions';\nconst initialState = {};\nconst itemGroupSlice = createSlice({\n  name: 'itemGroups',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loadOneItemGroup.fulfilled, (state, action) => {\n      const {\n        itemGroup\n      } = action.payload;\n      state[itemGroup.id] = itemGroup;\n    });\n  }\n});\nexport default itemGroupSlice.reducer;","map":{"version":3,"names":["createSlice","loadItemGroups","loadOneItemGroup","initialState","itemGroupSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","itemGroup","payload","id","reducer"],"sources":["C:/Users/emilc/Desktop/Projects/portfolio_projects/FarmerErmilsWebshop/src/store/ItemGroups.reducers.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { loadItemGroups, loadOneItemGroup } from './ItemGroups.actions';\r\n\r\nconst initialState = {};\r\n\r\nconst itemGroupSlice = createSlice({\r\n    name: 'itemGroups',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: builder => {\r\n        builder\r\n            .addCase(loadOneItemGroup.fulfilled, (state, action) => {\r\n                const { itemGroup } = action.payload;\r\n                state[itemGroup.id] = itemGroup;\r\n            })\r\n\r\n    }\r\n})\r\n\r\nexport default itemGroupSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,EAAEC,gBAAgB,QAAQ,sBAAsB;AAEvE,MAAMC,YAAY,GAAG,CAAC,CAAC;AAEvB,MAAMC,cAAc,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,YAAY;EAClBF,YAAY;EACZG,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAEC,OAAO,IAAI;IACtBA,OAAO,CACFC,OAAO,CAACP,gBAAgB,CAACQ,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACpD,MAAM;QAAEC;MAAU,CAAC,GAAGD,MAAM,CAACE,OAAO;MACpCH,KAAK,CAACE,SAAS,CAACE,EAAE,CAAC,GAAGF,SAAS;IACnC,CAAC,CAAC;EAEV;AACJ,CAAC,CAAC;AAEF,eAAeT,cAAc,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}